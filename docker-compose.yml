version: "2.1"
services:
  ens-webhook:
    build:
      context: .
      dockerfile: Dockerfile-enswebhook
    entrypoint: "npm run start"
    ports:
      - "8082:8082"
    healthcheck:
      test: curl ens-webhook:8082
      interval: 5s
      timeout: 3s
      retries: 5

  metrics-server:
    build:
      context: .
      dockerfile: Dockerfile-metrics
    entrypoint: python /app/metrics.py
    ports:
      - "8081:8081"
    healthcheck:
      test: curl metrics-server:8081
      interval: 5s
      timeout: 3s
      retries: 5

  cadvisor:
    image: google/cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro

  metrics-gateway:
    image: prom/pushgateway
    ports:
      - 9091:9091

  grafana-ui:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    links:
      - prometheus-server:prometheus
  
  alertmanager:
    image: prom/alertmanager:v0.12.0
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config.yaml'
    ports:
      - 9093:9093
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

  prometheus-server:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus

  geth:
    image: ethereum/client-go:v1.8.21
    entrypoint: /bin/sh -c "apk add curl && geth --targetgaslimit "6200000" --dev --dev.period 1 --rpc --rpcapi personal,web3,eth,net --rpcaddr 0.0.0.0 --rpcvhosts=* --rpcport=8545"
    ports:
     - "8545:8545"
    healthcheck:
      test: curl geth:8545
      interval: 5s
      timeout: 3s
      retries: 5

  watcher_db:
    image: postgres:11.2
    restart: always
    environment:
      POSTGRES_USER: omisego_dev
      POSTGRES_PASSWORD: omisego_dev
      POSTGRES_DB: omisego_dev
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U omisego_dev
      interval: 5s
      timeout: 3s
      retries: 5

  elixir-omg:
    build: .
    image: elixir-omg:dockercompose

  contractexchanger:
    image: jakebunce/contractexchanger:v0.0.2
    ports:
      - "5000:5000"
    healthcheck:
      test: curl contractexchanger:5000
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      geth:
        condition: service_healthy

  childchain:
    image: elixir-omg:dockercompose
    entrypoint: /bin/bash -c "./launcher.py && elixir --erl '-sname childchain' -S mix xomg.child_chain.start --config ~/config.exs"
    environment:
      - MIX_ENV=dev
      - EXIT_PERIOD_SECONDS=86400
      - ELIXIR_SERVICE=CHILDCHAIN
      - CONTRACT_EXCHANGER_URL=http://contractexchanger:5000
      - ETHEREUM_RPC_URL=http://geth:8545
      - CHILD_CHAIN_URL=http://childchain:9656
      - ETHEREUM_NETWORK=LOCALCHAIN
    restart: always
    ports:
      - "9656:9656"
    healthcheck:
      test: curl childchain:9656
      interval: 7s
      timeout: 3s
      retries: 15
    depends_on:
      geth:
        condition: service_healthy
      contractexchanger:
        condition: service_healthy

  watcher:
    image: elixir-omg:dockercompose
    entrypoint: /bin/bash -c "./launcher.py && mix ecto.reset --no-start && elixir --erl '-sname watcher' -S mix xomg.watcher.start --convenience --config ~/config_watcher.exs"
    environment:
      - MIX_ENV=dev
      - ELIXIR_SERVICE=WATCHER
      - CONTRACT_EXCHANGER_URL=http://contractexchanger:5000
      - ETHEREUM_RPC_URL=http://geth:8545
      - CHILD_CHAIN_URL=http://childchain:9656
      - ETHEREUM_NETWORK=LOCALCHAIN
      - DATABASE_URL=postgres://omisego_dev:omisego_dev@watcher_db:5432/omisego_dev
    restart: always
    ports:
      - "7434:7434"
    healthcheck:
      test: curl watcher:7434
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      watcher_db:
        condition: service_healthy
      childchain:
        condition: service_healthy
